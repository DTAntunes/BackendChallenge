swagger: '2.0'
info:
  title: GonnaTrackYou
  description: Letting you know how cool you are!
  version: "0.1"
  contact:
    name: Dário T A for Cool Apps Ltd.
    email: tech@iDlySystems.com
host: "localhost:12345"
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
paths:
  /login:
    post:
      # this had a space in it, but it breaks html2 docs for some reason
      operationId: LoginUser
      summary: Login or create a user from a token
      description: |
        Takes a user's access token for Facebook, validates, and extends it through Graph API. It then creates a user locally if needed, or informs the client if they should prompt the user to accept some permission they denied.
      parameters:
        - name: accessToken
          in: query
          required: true
          type: string
          description: The user's short lived access token as returned by Facebook.
      responses:
        200:
          description: The token passed validation and the user already existed or one was created with all requisite permissions. The access information will be set in a session cookie, but is also returned in the body for devices where cookies aren't (easily) supported. The denied permissions list will be empty.
          schema:
            $ref: '#/definitions/CreateResponse'
          headers:
            Access-Control-Allow-Origin:
              type: string
        202:
          description: The token passed validation and a new user was created, but some permissions were denied. These will be listed in the body and the user should be given a description of why these permissions are needed and an option to log in again (hopefully accepting the permissions). The session cookie is created as in the 200 response.
          schema:
            $ref: '#/definitions/CreateResponse'
          headers:
            Access-Control-Allow-Origin:
              type: string
        401:
          description: The token failed validation.
          headers:
            Access-Control-Allow-Origin:
              type: string
  /data:
    get:
      operationId: GetUserData
      summary: Retrieve user's popularity, interests and location data
      description: |
        Using a token/userId previously registered with the service, allows a client to retrieve their popularity data, favourite band (defined as the one they've liked longest - surely they would've unliked it by now otherwise!) and where they've been the most.
      parameters:
        - name: token
          required: false
          description: A login token as returned by the login endpoint. Only required if session cookies are not supported.
          type: string
          in: query
        - name: userId
          required: false
          description: The user ID of a user previously registered with the service. Only required if session cookies are not supported.
          type: string
          in: query
      responses:
        200:
          description: Retrieval of some of the user's data was successful. Data which could not be retrieved due to scope issues will be indicated in the response.
          schema:
            $ref: '#/definitions/UserData'
          headers:
            Access-Control-Allow-Origin:
              type: string
        401:
          description: The login token provided was invalid.
          headers:
            Access-Control-Allow-Origin:
              type: string
        403:
          description: The stored access token has expired - the user will need to login again.
          headers:
            Access-Control-Allow-Origin:
              type: string
        404:
          description: The stored access token doesn't have any of the required scopes and so no data can be provided.
          headers:
            Access-Control-Allow-Origin:
              type: string
definitions:
  CreateResponse:
    description: Describes the result of a user creation attempt.
    type: object
    properties:
      data:
        description: A (potentially empty) list of rejected permissions in generating the token.
        type: array
        items:
          $ref: '#/definitions/Permission'
      meta:
        type: object
        properties:
          accessInfo:
            type: object
            properties:
              userId:
                type: string
                description: The user ID of the authenticated user.
              token:
                type: string
                description: A login token for this device.
  Permission:
    type: object
    properties:
      id:
        type: string
        description: The name of the permission this object represents, as returned by Graph API.
      type:
        type: string
        description: Always "permission". Required for conformance to JSON API specification.
  UserData:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            type: string
            description: The user's ID.
          type:
            type: string
            description: Always "interests". Required for conformance to JSON API specification.
          attributes:
            type: object
            properties:
              favouriteMusic:
                type: object
                properties:
                  error:
                    type: boolean
                    description: Describes whether the user's music information was accessible. May be true with no other keys available if the user has no music information on their profile. If false, no other keys will be available.
                  band:
                    type: string
                    description: Name of the user's preferred band. The preferred band is defined as the band that the user has liked for the longest. This is due to technical limitations (there doesn't seem to be a way to find interactions between a user and a page, and this would be very intensive to do for all pages even batched) and following the reasoning that whatever page they've been following longest is what they like most.
                  likeDate:
                    type: string
                    description: The date at which the page was liked, in the same format as Facebook uses - "YYYY:MM:DD'T'HH:MM:SS±ZZZZ".
              favouritePlace:
                type: object
                properties:
                  error:
                    type: boolean
                    description: Describes whether the user's music information was accessible. May be true with no other keys available if the user has no music information on their profile. If false, no other keys will be available.
                  place:
                    type: string
                    description: The name of the user's favourite place based on how many times they've tagged themselves there or been tagged there. Only reports locations for which Facebook reports a city name and country.
                  count:
                    type: integer
                    description: The number of times the user was tagged in that location. Note that Facebook aggregates tags within about 12 hours of each other, so this may not match up exactly with the actualy number of tags.
              popular:
                type: object
                properties:
                  error:
                    type: boolean
                    description: Describes whether the user's music information was accessible. May be true with no other keys available if the user has no music information on their profile. If false, no other keys will be available.
                  popular:
                    type: boolean
                    description: Whether the user is popular (has more than 50 friends) or not.
                  popularMeasure:
                    type: integer
                    description: The floor of the percentage of the 5000 user limit the user has.
